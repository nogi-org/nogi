plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'kr.co'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // lombok
    testImplementation 'org.projectlombok:lombok:1.18.26'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // starter
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // OpenFeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    // FeignClient PATCH for
    implementation 'io.github.openfeign:feign-httpclient:11.8'
    // dotenv(todo: 필요여부 따라 삭제하기)
    testImplementation 'io.github.cdimascio:dotenv-java:3.0.0'
    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'
    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    // 기본 Security 및 OAuth2 로그인
    // implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // JSON 처리 라이브러리 (OAuth2SuccessHandler에서 ObjectMapper 사용)
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // JWT 라이브러리 (JJWT)
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'  // API 의존성
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3' // 구현체
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3' // JSON 처리용 Jackson 의존성
}

tasks.named('test') {
    useJUnitPlatform()
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencyManagement {

    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }

}
